(()=>{"use strict";class e{constructor(e,t,o,n,s,i,l){this._id=e,this.grade=t,this.color=o,this.section=n,this.type=s,this.canLead=i,this.canTopRope=l}}class t{constructor(){}addRoute(e){let t=e.toJSON();fetch("/addRoute",{method:"POST",headers:{"Content-Type":"application/json"},body:t}).then((e=>e.json()))}removeRoute(e){let t=e.getIdJSON();fetch("/removeRoute",{method:"POST",headers:{"Content-Type":"application/json"},body:t}).then((e=>e.json()))}async getAllRoutes(){return fetch("/routes",{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>e.json())).then((e=>{}))}}let o=null,n=new class{constructor(){if(o)return o;o=this,this.mongoManger=new t,this.climb=new e}};window.app=n;const s=[new Climb("1","VB","Brown",1),new Climb("2","5.4","Yellow",1,"rope",!0,!0),new Climb("3","V12","Green",1)],i=document.getElementById("grades"),l=document.getElementById("climbType");s.forEach((e=>function(e){for(let t=0;t<l.length;++t)l.options[t].value!==e.type&&(l.options[l.options.length]=new Option(e.type().type));for(let t=0;t<i.length;++t)i.options[t].value!==i.type&&(i.options[i.options.length]=new Option(e.grade))}(e)))})();
//# sourceMappingURL=bundle.55556bf5da14bfc4.js.map