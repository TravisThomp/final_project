{"version":3,"file":"bundle.0ec7448f752b9353.js","mappings":"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","sources":["webpack:///./src/util/MongoManager.js","webpack:///./src/main/app/App.js","webpack:///./src/main/app/route/Climb.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/main/script.js"],"sourcesContent":["import Climb from \"../main/app/route/Climb\";\r\n\r\nexport default class MongoManager\r\n{\r\n    constructor()\r\n    {\r\n        \r\n    }\r\n\r\n    /**\r\n     * Adds a route to the database\r\n     * @param {route to add} route \r\n     */\r\n    async addRoute(route)\r\n    {\r\n        route = new Climb(\"3\", \"5.4\", \"Yellow\", 1, \"rope\", true, true);\r\n\r\n        //let body = route.toJSON();\r\n       // console.log(body)\r\n       let body = JSON.stringify(route);\r\n        \r\n        return fetch( '/addRoute', {\r\n            method:'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },  \r\n            body: body \r\n          })\r\n          .then( response => response.json())\r\n\r\n          //TO-DO: Update route ID\r\n    }\r\n\r\n    /**\r\n     * removes a route from the database\r\n     * @param {route to remove} route \r\n     */\r\n    removeRoute(route)\r\n    {\r\n        let body = JSON.stringify(route.getIdJSON());\r\n\r\n        fetch( '/removeRoute', {\r\n            method:'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },  \r\n            body: body \r\n          })\r\n          .then( response => response.json())\r\n\r\n          //TO-DO: Update route list\r\n    }\r\n\r\n    /**\r\n     * Gets all the routes in database\r\n     * @return An array of all the routes\r\n     */\r\n    async getAllRoutes()\r\n    {\r\n        return fetch( `/routes`, {\r\n            method:'GET',\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          }})\r\n          .then( response => response.json())\r\n    }\r\n\r\n}","import MongoManager from \"../../util/MongoManager\";\r\nimport Climb from \"./route/Climb\";\r\n\r\nlet instance = null\r\n\r\nexport default class App\r\n{\r\n    constructor()\r\n    {\r\n        if(instance)\r\n        {\r\n            return instance\r\n        }\r\n\r\n        instance = this\r\n\r\n        this.mongoManger = new MongoManager()\r\n        this.climb = new Climb();\r\n    }\r\n}","export default class Climb {\r\n    constructor(_id, grade, color, section, type, canLead, canTopRope) {\r\n        this._id = _id;\r\n        this.grade = grade;\r\n        this.color = color;\r\n        this.section = section;\r\n        this.type = type;\r\n        this.canLead = canLead;\r\n        this.canTopRope = canTopRope;\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { default: App } = require(\"./app/App\");\r\nconst { default: Climb } = require(\"./app/route/Climb\");\r\n\r\n\r\nlet app = new App();\r\nwindow.app = app\r\n\r\n//TODO: get the list of climbs from the database, and iterate over to populate the filter list\r\n\r\nconst climb1 = new Climb(\"1\", \"VB\", \"Brown\", 1, \"boulder\");\r\nconst climb2 = new Climb(\"2\", \"V1\", \"Brown\", 1, \"boulder\");\r\nconst climb3 = new Climb(\"3\", \"5.4\", \"Yellow\", 1, \"rope\", true, true);\r\nconst climb4 = new Climb(\"4\", \"V12\", \"Green\", 1, \"boulder\");\r\n\r\nconst climbsArray = [climb1, climb2, climb3, climb4];\r\n\r\n//Get the grades and types select\r\nconst gradesFilter = document.getElementById('grades');\r\nconst climbTypeFilter = document.getElementById('climbType');\r\n//Iterate over each element in grades to add each grade as an option in the select\r\nwindow.addEventListener('load', () => {\r\n    console.log(123)\r\n    populateFilters()\r\n    sortSelect(gradesFilter)\r\n})\r\nfunction populateFilters() {\r\n    climbsArray.forEach(climb => addOption(climb))\r\n}\r\n\r\n//Add the option to the select\r\nfunction addOption(climb) {\r\n    if (!optionExists(climb.grade, gradesFilter)){\r\n        gradesFilter.options[gradesFilter.options.length] = new Option(climb.grade, climb.grade)\r\n    }\r\n}\r\n\r\nfunction parseClimbType(climb) {\r\n    if (climb.type.includes(\"rope\")) {\r\n        if (climb.canLead) {\r\n            if (climb.canTopRope) {\r\n                return \"Lead or Top Rope\"\r\n            } else if (!climb.canTopRope) {\r\n                return \"Lead Only\"\r\n            }\r\n        } else if (climb.canTopRope && !climb.canLead) {\r\n            return \"Top Rope Only\"\r\n        }\r\n    } else if (climb.type.includes(\"boulder\")) {\r\n        return \"Boulder\"\r\n    }\r\n}\r\n\r\nfunction optionExists ( needle, haystack )\r\n{\r\n    let optionExists = false,\r\n        optionsLength = haystack.length;\r\n\r\n    while ( optionsLength-- )\r\n    {\r\n        if ( haystack.options[ optionsLength ].value === needle )\r\n        {\r\n            optionExists = true;\r\n            break;\r\n        }\r\n    }\r\n    return optionExists;\r\n}\r\n\r\nfunction sortSelect(selElem) {\r\n    let tmpAry = [];\r\n    for (let i=0;i<selElem.options.length;i++) {\r\n        tmpAry[i] = [];\r\n        tmpAry[i][0] = selElem.options[i].text;\r\n        tmpAry[i][1] = selElem.options[i].value;\r\n    }\r\n    tmpAry.sort();\r\n    while (selElem.options.length > 0) {\r\n        selElem.options[0] = null;\r\n    }\r\n    for (let i=0;i<tmpAry.length;i++) {\r\n        selElem.options[i] = new Option(tmpAry[i][0], tmpAry[i][1]);\r\n    }\r\n}\r\n"],"names":["MongoManager","constructor","route","Climb","body","JSON","stringify","fetch","method","headers","then","response","json","removeRoute","getIdJSON","instance","App","this","mongoManger","climb","_id","grade","color","section","type","canLead","canTopRope","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","default","require","app","window","climbsArray","gradesFilter","document","getElementById","addEventListener","console","log","forEach","needle","haystack","optionExists","optionsLength","length","options","Option","addOption","selElem","tmpAry","i","text","sort","sortSelect"],"sourceRoot":""}