(()=>{"use strict";class e{constructor(e,t,o,n,l,r,c){this._id=e,this.grade=t,this.color=o,this.section=n,this.type=l,this.canLead=r,this.canTopRope=c}}window.onload=function(){l(),document.querySelector("#submitButton").onclick=n};const t=new class{constructor(){}async addRoute(e){let t=JSON.stringify(e);return fetch("/addRoute",{method:"POST",headers:{"Content-Type":"application/json"},body:t}).then((e=>e.json()))}async removeRoute(e){let t=JSON.stringify({_id:e._id});return fetch("/removeRoute",{method:"POST",headers:{"Content-Type":"application/json"},body:t}).then((e=>e.json()))}async getAllRoutes(){let t=[];return fetch("/routes",{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>e.json())).then((o=>o.forEach((o=>{let n=new e(o._id,o.grade,o.color,o.section,o.type,o.canLead,o.canTopRope);t.push(n)})))).then((()=>t))}},o=new class{constructor(){}parseClimbType(e){if(e.type.includes("rope")){if(e.canLead){if(e.canTopRope)return"Lead/Top Rope";if(!e.canTopRope)return"Lead Only"}else if(e.canTopRope&&!e.canLead)return"Top Rope Only"}else if(e.type.includes("boulder"))return"Boulder"}getType(e){return console.log(),"boulder"===e[e.selectedIndex].value?"boulder":"lead"===e[e.selectedIndex].value||"leadtoprope"===e[e.selectedIndex].value||"toprope"===e[e.selectedIndex].value?"rope":void 0}},n=function(n){n.preventDefault(),console.log("calling addclimb");const r=document.querySelector("#grade"),c=document.querySelector("#color"),i=document.querySelector("#section"),a=document.querySelector("#type"),d=r.value.toUpperCase(),s=c[c.selectedIndex].value,u=i[i.selectedIndex].value,p=new e(null,d,s,u,o.getType(a),function(e){return"lead"===e.value||"leadtoprope"===e.value}(a),function(e){return"toprope"===e.value||"leadtoprope"===e.value}(a));t.addRoute(p).then((()=>l()))},l=function(){t.getAllRoutes().then((e=>r(e)))},r=function(e){console.log("Initializing table with "+JSON.stringify(e));const n=document.getElementById("dataTable");for(let e=n.rows.length-1;e>0;e--)n.deleteRow(e);e.forEach((function(e){const r=n.insertRow(-1),c=r.insertCell(0),i=r.insertCell(1),a=r.insertCell(2),d=r.insertCell(3),s=r.insertCell(4),u=r.insertCell(5),p=document.createElement("input");p.type="button",p.id="deleteButton",p.value="Delete",p.onclick=function(){var o;o=e,console.log("handleDeleteClick called"),t.removeRoute(o).then((()=>l()))},u.appendChild(p),c.innerHTML=e._id,i.innerHTML=e.grade,a.innerHTML=e.color,a.style.background=e.color,"Black"===e.color&&(a.style.color="White"),d.innerHTML=e.section,s.innerHTML=o.parseClimbType(e),console.log(e)}))}})();
//# sourceMappingURL=bundle.13c56d7ec6969ac3.js.map